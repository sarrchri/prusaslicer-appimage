name: build

permissions:
  contents: write

on:
  push:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to build'
        required: false
        default: ''
  schedule:
    - cron: '35 17 */14 * 5'  # Every second Friday at 18:35 CET

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  linux:
    runs-on: ubuntu-24.04
    timeout-minutes: 180
    steps:

    - name: Clone the repository
      uses: actions/checkout@v4

    - name: Prerequisities
      run: |
        sudo apt-get update
        # locales-all is needed, otherwise it will crash with LANG=ro_RO.UTF-8
        sudo apt-get install -y locales-all git build-essential autoconf cmake libglu1-mesa-dev libgtk-3-dev libdbus-1-dev libwebkit2gtk-4.1-dev desktop-file-utils libegl-mesa0 libnss-mdns
        sudo apt-get install -y libglx-mesa0 libglx0 libxcb-dri2-0 libxcb-dri3-0 libxcb-glx0 libxcb-present0 libxcb-sync1 libxcb-xfixes0 libxshmfence1 libgl1 libdrm2 libgbm1 libvulkan1

    - name: Clone PrusaSlicer repository
      run: |
        git clone --recursive https://github.com/sarrchri/PrusaSlicer.git
        cd PrusaSlicer
        git fetch --tags
        TAG=${{ github.event.inputs.tag }}
        if [ -z "$TAG" ]; then
          TAG=$(git describe --tags `git rev-list --tags --max-count=1`)
        fi
        git checkout $TAG
        CLEAN_TAG=$(echo $TAG|sed -e 's|version_||g')
        echo "VERSION=$CLEAN_TAG" >> $GITHUB_ENV

    - name: ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: ${{ runner.os }}

    - name: Determine dependency hash
      id: dephash
      run: |
           cd PrusaSlicer
           echo dephash=$(git rev-parse HEAD:deps) >> $GITHUB_OUTPUT

    - name: Cache Dependencies
      id: cache-dependencies
      uses: actions/cache@v4
      with:
        path: PrusaSlicer/deps/build/destdir
        key: dependencycache-${{ runner.os }}-${{ steps.dephash.outputs.dephash }}

    - name: Cache Download Files
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      id: cache-download
      uses: actions/cache@v4
      with:
        path: PrusaSlicer/deps/download
        key: downloadcache-${{ runner.os }}-${{ github.run_id }}
        restore-keys: |
          downloadcache-${{ runner.os }}

    - name: Download GMP
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        mkdir -p PrusaSlicer/deps/download/GMP
        test -r PrusaSlicer/deps/download/GMP/gmp-6.2.1.tar.bz2 || curl -o PrusaSlicer/deps/download/GMP/gmp-6.2.1.tar.bz2 https://ftp.gnu.org/gnu/gmp/gmp-6.2.1.tar.bz2

    - name: Build dependencies
      if: steps.cache-dependencies.outputs.cache-hit != 'true'
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        cd PrusaSlicer/deps
        mkdir -p build
        cd build
        cmake .. -DDEP_WX_GTK3=ON -DDEP_DOWNLOAD_DIR=$(pwd)/../download
        make -j $(nproc)

    - name: Build PrusaSlicer
      run: |
        export PATH="/usr/lib/ccache:/usr/local/opt/ccache/libexec:$PATH"
        sed -i '/^set(SLIC3R_VERSION/s/")/+testing")/g' PrusaSlicer/version.inc
        sed -i '/^set(SLIC3R_BUILD_ID/s/+UNKNOWN/+testing/g' PrusaSlicer/version.inc
        mkdir -p PrusaSlicer/build
        cd PrusaSlicer/build
        cmake .. -DSLIC3R_STATIC=1 -DSLIC3R_GTK=3 -DSLIC3R_PCH=OFF -DCMAKE_PREFIX_PATH=$(pwd)/../deps/build/destdir/usr/local -DCMAKE_INSTALL_PREFIX=/usr
        make -j $(nproc)
        sudo make install
        find ../deps/build/destdir/usr/local

    - name: Bundle
      run: sh -ex ./bundle.sh

    - name: Upload to GitHub Releases
      run: |
        gh release delete $VERSION -y || true
        gh release create $VERSION *.AppImage* --title "$VERSION"
